// Copyright 2015 Kerbas_ad_astra
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0

CONTRACT_GROUP
{
	name = AntennaRangeRelays
	minVersion = 1.2.2
	maxSimultaneous = 2
}

@CONTRACT_GROUP[AntennaRangeRelays]:FOR[AntennaRangeRelays] //A dummy patch to tell Module Manager that AntennaRangeRelays is installed.
{
	maxCompletions = 0
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayMoon
	
	title = Place a relay satellite in orbit around @/targetBody1
	
	group = AntennaRangeRelays
	
	description = To support later exploration missions to @/targetBody1, we want to establish a communication network of satellites around it.  This will allow later missions to communicate with @/homeworld, even when on the far side of @/targetBody1.
	
	synopsis = Place an uncrewed communications relay with a Comms DTS-M1 in orbit around @/targetBody1.
	
	completedMessage = The relay is in position.  Now later missions to @/targetBody1 can use it when they can't see @/homeworld!
	
	targetBody = @/targetBody1
	
	//Since you only get so many of these contracts for each body, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 15
	rewardFunds = 10000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 10
	failureFunds = 25000.0
	advanceFunds = 20000.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = CelestialBody
		//Here's the control logic: the body has to be moon of the homeworld, and it must have fewer than 4 ships orbiting it (4 is the minimum to establish coverage, and if you have 4 ships, you probably have four antennas).
		targetBody1 = HomeWorld().Children().Where(b => (AllVessels().Where(v => (v.CelestialBody() == b) && (v.IsOrbiting()) && (v.Altitude() < 1500000)).Count() < 4)   ).Random()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		targetBody = @/targetBody1
		maxApA = 1500000 //further than this and a whip on the Mun will prefer a link to Kerbin's level 2 facility.
		notes = Most of the orbit details are intentionally left open, but an inclined and elliptical orbit will give the best uptime, with the shortest periods of being "eclipsed" by @/targetBody1.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include a lunar-range antenna.
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = mediumDishAntenna
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = ReachSpace
		type = ReachSpace
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = mediumDishAntenna
	}
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayInnerPlanet
	
	title = Place a relay satellite in orbit around @/targetBody1
	
	group = AntennaRangeRelays
	
	description = To support later exploration missions to @/targetBody1, we want to establish a communication network of satellites with enough transmitter power to reach all the way back to @/homeworld.  This will allow later missions to use smaller, less power-hungry antennas.  Since we've upgraded the tracking station, a Comms DTS-M1 should do the trick for @/targetBody1.
	
	synopsis = Place a communications relay with a Comms DTS-M1 in orbit around @/targetBody1.
	
	completedMessage = The relay is in position.  Now later missions to @/targetBody1 can use it instead of having to transmit all the way to @/homeworld!
	
	
	targetBody = @/targetBody1
		
	//Since you only get so many of these contracts for each body, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = CelestialBody
		
		
		//Here's the control logic: the body has to be a planet or moon (i.e. not a star) in the inner solar system (i.e. semi-major axis < 1.6x homeworld's), it must have fewer than 4 ships orbiting it (4 is the minimum to establish coverage, and if you have 4 ships, you probably have four antennas), and it cannot be the homeworld or one of the homeworld's children (since the homeworld doesn't need a "network" and the homeworld's children don't need a DTS-M1).
		targetBody1 = AllBodies().Where(b => (  (  ((b.IsPlanet() && (b.SemiMajorAxis() < 1.6 * HomeWorld().SemiMajorAxis())) || (b.IsMoon() && (b.Parent().SemiMajorAxis() < 1.6 * HomeWorld().SemiMajorAxis() ) )) && !(b.IsHomeWorld() || b.Parent().IsHomeWorld()) ) && (AllVessels().Where(v => (v.CelestialBody() == b) && (v.IsOrbiting()) && (v.Altitude() < 4000000)).Count() < 4)  ) ).Random()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		maxApA = 4000000 //Too much higher, and whip antennas won't be able to reach it efficiently.
		notes = Most of the orbit details are intentionally left open, but an inclined and elliptical orbit will give the best uptime, with the shortest periods of being "eclipsed" by the body.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include an inner-planet-range antenna
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = mediumDishAntenna
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = Escape
		type = Escape
		targetBody = Kerbin
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 1
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = mediumDishAntenna
	}
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayOuterPlanet
	
	title = Place a relay satellite in orbit around @/targetBody1
	
	group = AntennaRangeRelays
	
	description = To support later exploration missions to @/targetBody1, we want to establish a communication network of satellites with enough transmitter power to reach all the way back to @/homeworld.  This will allow later missions to use smaller, less power-hungry antennas.  For @/targetBody1, a Communotron 88-88 should do the trick.
	
	synopsis = Place a communications relay with a Communotron 88-88 in orbit around @/targetBody1.
	
	completedMessage = The relay is in position.  Now later missions to @/targetBody1 can use it instead of having to transmit all the way to @/homeworld!
	
	
	targetBody = @/targetBody1
		
	//Since you only get so many of these contracts for each body, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = CelestialBody
		
		
		//Here's the control logic: the body has to be a planet or moon in the outer solar system (i.e. semi-major axis > 1.6x homeworld's), it must have fewer than 4 ships orbiting it (4 is the minimum to establish coverage, and if you have 4 ships, you probably have four antennas), and it cannot be the homeworld or one of the homeworld's children (since the homeworld doesn't need a "network" and the homeworld's children don't need an 88-88).
		targetBody1 = AllBodies().Where(b => (  (  ( (b.IsPlanet() && (b.SemiMajorAxis() > 1.6 * HomeWorld().SemiMajorAxis())) || (b.IsMoon() && (b.Parent().SemiMajorAxis() > 1.6 * HomeWorld().SemiMajorAxis())) )  && !(b.IsHomeWorld() || b.Parent().IsHomeWorld()) ) && (AllVessels().Where(v => (v.CelestialBody() == b) && (v.IsOrbiting()) && (v.Altitude() < 4000000)).Count() < 4)  ) ).Random()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		maxApA = 4000000 //Too much higher, and whip antennas won't be able to reach it efficiently when just over the horizon on Jool.
		notes = Most of the orbit details are intentionally left open, but an inclined and elliptical orbit will give the best uptime, with the shortest periods of being "eclipsed" by the body.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include an outer-planet-range antenna
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = Escape
		type = Escape
		targetBody = Kerbin
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 2
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = commDish
	}
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayOuterPlanetHighOrbit
	
	title = Place a relay satellite in high orbit around @/targetBody1
	
	group = AntennaRangeRelays
	
	description = Our communication network around @/targetBody1 is being hampered by @/targetBody1 itself -- it keeps getting between us and the relays.  To improve availability, we want you to put a relay in a highly-inclined and highly-eccentric orbit around @/targetBody1.
	
	synopsis = Place a communications relay with a Communotron 88-88 in a highly-inclined and highly-eccentric orbit around @/targetBody1.
	
	completedMessage = The relay is in position.  Now our missions to @/targetBody1 will have better communication availability!
	
	
	targetBody = @/targetBody1
		
	//Since you only get so many of these contracts for each body, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = CelestialBody
		//targetBody1 = HomeWorld().Children().Where(b => !(OrbitedBodies().Contains(b)) ).Random() //
		
		//Here's the control logic: the body has to be a gas giant (i.e. big enough that it gets in the way of relatively low-orbiting whip-reachable relays) and it must have fewer than 2 ships orbiting it at "high" altitude.
		targetBody1 = AllBodies().Where(b => (b.IsPlanet() && !b.HasSurface()) && (AllVessels().Where(v => (v.CelestialBody() == b) && (v.IsOrbiting()) && (v.Altitude() > 20000000) ).Count() < 2)).Random()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		
		minApA = 20000000
		minInclination = 45
		minEccentricity = 0.4
		notes = Try to get the apoapsis as far out of the plane as possible (i.e. argument of periapsis = +/- 90 degrees) and the periapsis as close to the planet as possible for maximum availability.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include an outer-planet-range antenna
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = Orbit
		type = Orbit
		targetBody = @/targetBody1
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 2
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = commDish
	}
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayHomeworldLagrange
	
	title = Place a relay satellite in orbit around @/targetBody1 ahead of or behind @/homeworld
	
	group = AntennaRangeRelays
	
	description = Sometimes, planets are on the opposite side of @/targetBody1 from us for several days.  To improve availability, we want you to put a relay in an orbit similar to @homeworld's, but "ahead of" or "behind" us, so that it can see around @/targetBody1 and keep us connected.
	
	synopsis = Place a communications relay with a Communotron 88-88 in orbit ahead of or behind @/homeworld around @/targetBody1.
	
	completedMessage = The relay is in position.  Now @/targetBody1 won't get in our way!
	
	targetBody = @/targetBody1
	
	maxCompletions = 2
		
	//Since you only get so many of these contracts, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = CelestialBody
		targetBody1 = HomeWorld().Parent()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		
		minApA = HomeWorld().SemiMajorAxis()*0.9
		maxApA = HomeWorld().SemiMajorAxis()*1.1
		
		minPeA = HomeWorld().SemiMajorAxis()*0.9
		maxPeA = HomeWorld().SemiMajorAxis()*1.1
		
		notes = Try to get as close as possible to @/homeworld's orbital period, and between 60 and 120 degrees ahead or behind.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include an outer-planet-range antenna
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = Orbit
		type = Orbit
		targetBody = @/targetBody1
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 2
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = commDish
	}
}

CONTRACT_TYPE
{
	name = AntennaRangeRelayHomeworldParentLagrange
	
	title = Place a relay satellite in orbit around @/targetBody1 ahead of or behind @/homeworldParent
	
	group = AntennaRangeRelays
	
	description = Sometimes, planets are on the opposite side of @/targetBody1 from us for several days.  To improve availability, we want you to put a relay in an orbit similar to @homeworldParent's, but "ahead of" or "behind" it, so that the relay can see around @/targetBody1 and keep us connected.
	
	synopsis = Place a communications relay with a Communotron 88-88 in orbit ahead of or behind @/homeworldParent around @/targetBody1.
	
	completedMessage = The relay is in position.  Now @/targetBody1 won't get in our way!
	
	targetBody = @/targetBody1
	
	maxCompletions = 2
		
	//Since you only get so many of these contracts, we want this one to be decently high-priority.
	weight = 5
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	DATA
	{
		type = CelestialBody
		homeworldParent = HomeWorld().Parent()
	}
	
	DATA
	{
		type = CelestialBody
		targetBody1 = HomeWorld().Parent().Parent()
	}
	
	PARAMETER
	{
		name = Orbit
		type = Orbit
		
		minApA = HomeWorld().Parent().SemiMajorAxis()*0.9
		maxApA = HomeWorld().Parent().SemiMajorAxis()*1.1
		
		minPeA = HomeWorld().Parent().SemiMajorAxis()*0.9
		maxPeA = HomeWorld().Parent().SemiMajorAxis()*1.1
		
		notes = Try to get as close as possible to @/homeworldParent's orbital period, and between 60 and 120 degrees ahead or behind.
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = Antennas
		type = Any
		title = Include an outer-planet-range antenna
	
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = commDish
		}
	}
	
	REQUIREMENT
	{
		name = Orbit
		type = Orbit
		targetBody = @/targetBody1
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 2
	}
	
	REQUIREMENT
	{
		name = Expression
		type = Expression
		expression = HomeWorld().IsMoon()
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = commDish
	}
}